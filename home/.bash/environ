#! ~/.bash/environ

# =========================================================================

# Enable ANSI codes in less output
export LESS='-R'

# =========================================================================

# Few ways to customize Ant:
# 1. Create alias ant with the particular command line options.
# 2. Export ANT_ARGS environment variable with the command line options.
# 3. Create ${HOME}/.ant.properties with prefedined properties.
#    This file allows to override some properties without editing 
#    Build.xml and without typing -D on each invocation. 
#    This way, build.xml should be able to read properties from this file.
# 4. Any combination of all the stuff above.

ANT_ARGS="-find build.xml"
ANT_ARGS="${ANT_ARGS} -emacs"
ANT_ARGS="${ANT_ARGS} -Dium.install.dir=/opt/SIU"
ANT_ARGS="${ANT_ARGS} -Dusing.git="
#ANT_ARGS="${ANT_ARGS} -logger org.apache.tools.ant.listener.AnsiColorLogger"

export ANT_ARGS

# =========================================================================

PS1="\[\e]0;\w\a\]"			# current dir in title

PS1="${PS1}\n"				# new line
PS1="${PS1}\[\e[32m\]"			# color: dark green
PS1="${PS1}\u@\h "			# user@host <space>

PS1="${PS1}\[\e[35m\]"			# color: purple
PS1="${PS1}${MSYSTEM:-$OSTYPE} "	# $MSYSTEM/$OSTYPE <space>

PS1="${PS1}\[\e[33m\]"			# color: dark yellow
PS1="${PS1}\w"				# current dir

PS1="${PS1}\[\e[0m\]"			# color: reset to default

if declare -F __git_ps1 >/dev/null
then
	GIT_PS1_SHOWCOLORHINTS=1
	PS1="${PS1}\` __git_ps1 \`"	# git status
fi

PS1="${PS1}\n"				# new line
PS1="${PS1}\\\$ "			# $ <space>

# =========================================================================

# EOF
