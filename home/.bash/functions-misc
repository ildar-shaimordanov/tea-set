# shellcheck shell=bash

# =========================================================================

symlink() {
	[ $# -eq 2 ] || {
		echo "Make symbolic links in the Cygwin 1.7.xx style"
		echo "Usage: symlink TARGET LINK_NAME"
		return 1
	}
	printf '!<symlink>%s\0' "$1" > "$2" || return $?
	chattr +s "$2"
}

# =========================================================================

# Manage with windows clipboard
# Check for clp from https://github.com/ildar-shaimordanov/my-scripts

command -v clp || clp() {
	if [ "$1" = "-h" ] || [ "$1" = "--help" ]
	then
		cat <<HELP
Usage: [ clp [-u|-d] | ] ... [ | clp [-u|-d] ]

Copy data from and/or to the clipboard

	-u	dos2unix
	-d	unix2dos
HELP
		return
	fi

	if [ ! -t 0 ]
	then
		# ... | clp
		case "$1" in
		-u ) dos2unix ;;
		-d ) unix2dos ;;
		*  ) cat - ;;
		esac >/dev/clipboard
	else
		# clp | ...
		# or simply output the clipboard
		case "$1" in
		-u ) dos2unix ;;
		-d ) unix2dos ;;
		*  ) cat - ;;
		esac </dev/clipboard
	fi
}

# =========================================================================

# Tokens are stored in the file ~/.git-tokens in the form: ALIAS TOKEN
# Display a token by its alias or print the list of token aliases,
# if the alias not specified
gt() {
	awk -v t="$1" '! t { print $1 } $1 == t { print $2 }' ~/.git-tokens
}

# =========================================================================

# https://github.com/rprichard/winpty

if ! command -v winpty >/dev/null 2>&1
then
	# Assume winpty* instances lie next to Cygwin/Msys separately
	# under their own directories as follows:
	# -- CYGROOT/../winpty*cygwin* for Cygwin
	# -- MSYSROOT/../winpty*msys2* for Msys

	WINPTY="$(
		n="$( uname -s -m | tr '[:upper:]' '[:lower:]' )"

		case "$n" in
		cygwin* )
			d="$( cygpath -m / )"
			e=cygwin
			;;
		msys* | mingw* | windows* )
			d="$( cd / ; pwd -W )"
			e=msys2
			;;
		esac

		case "$n" in
		*x86_64	)
			b=64
			;;
		*	)
			b=32
			;;
		esac

		# shellcheck disable=SC2012
		WINPTY="$(
			ls -rd "$d"/../winpty*$e*$b 2>/dev/null \
			| head -1
		)"

		[ -n "$WINPTY" ] || exit

		case "$n" in
		cygwin* )
			cygpath "$WINPTY"
			;;
		msys* | mingw* | windows* )
			cd "$WINPTY" && pwd
			;;
		esac
	)"

	if [ -n "$WINPTY" ] && [ -x "$WINPTY/bin/winpty" ]
	then
		PATH="$PATH:$WINPTY/bin"
	fi

	unset WINPTY
fi

# =========================================================================

# Native Windows application invoker (works in most cases)

alias e='call notepad'

call() {
	# shellcheck disable=SC2046
	eval "$1" $( [ $# -gt 1 ] && shift && cygpath -m -- "$@" | sed 's/^\|$/"/g' )
}

# =========================================================================

# pwd -W for cygwin
uname | grep -iq cygwin && pwd() {
	case "$1" in
	-W )
		cygpath -m "$PWD"
		;;
	* )
		builtin pwd "$@"
		;;
	esac
}

# =========================================================================

# join lines

j2() {
	sed "N;s/\n/$1/"
}

j3() {
	sed "N;N;s/\n/$1/g"
}

jn() {
	sed ":a;N;s/\n/$1/;ta"
}

# =========================================================================

ip2hex() {
	local ip
	IFS="." read -ra ip <<<"$1"
	printf "0x0001%02x%02x%02x%02x" "${ip[@]}"
}

hex2ip() {
	printf "%d.%d.%d.%d" "0x${1:6:2}" "0x${1:8:2}" "0x${1:10:2}" "0x${1:12:2}"
}

# =========================================================================

image2pdf() {
	convert -adjoin -format pdf "$@"
}

img2pdf() {
	jpegtopnm "${1:--}" | pnmtops -noturn | ps2pdf - "${2:--}"
}

cover2folder() {
	local resize="300x300>"
	local gravity=""
	local crop=""

	case "$1" in
	-l | -r )
		resize="600x300>"
		crop="50%x100%"

		case "$1" in
		-l ) gravity="west" ;;
		-r ) gravity="east" ;;
		esac

		shift
		;;
	-u | -d )
		resize="300x600>"
		crop="100%x50%"

		case "$1" in
		-u ) gravity="north" ;;
		-d ) gravity="south" ;;
		esac

		shift
		;;
	esac

	convert "${1:-cover-front.jpg}" \
		-resize "$resize" \
		${gravity:+-gravity "$gravity"} \
		${crop:+-crop "$crop"} \
		"folder.jpg"
}

# =========================================================================

# POSIX shell calculator
# https://www.commandlinefu.com/commands/view/24415/shell-pocket-calculator-pure-sh

calc() {
	printf "%.8g\n" "$( printf "%s\n" "$*" | bc -l )"
}

# =========================================================================

# EOF
