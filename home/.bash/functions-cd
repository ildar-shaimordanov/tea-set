#! ~/.bash/functions-cd

# =========================================================================

# http://www.commandlinefu.com/commands/view/11246/bashksh-function-given-a-file-cd-to-the-directory-it-lives
# dirname DIR/FILE + cd DIR
cdf() {
	cd "$( [ -f "$1" ] && dirname "$1" || echo "$1" )"
}

# =========================================================================

# http://www.commandlinefu.com/commands/view/12669/create-a-directory-and-change-into-it-at-the-same-time
# mkdir DIR + cd DIR
mkcd() {
	mkdir -p "$1" && cd "$1"
}

# =========================================================================

# cd [-LP] old new
#
# https://linux.die.net/man/1/ksh
# The string new is substituted for old in the current directory, and
# the shell attempts to change to the new directory.
#
# https://linux.die.net/man/1/zshbuiltins
# ... substitutes the string new for the string old in the name of the
# current directory, and tries to change to this new directory.
#
# http://code.metager.de/source/xref/gnu/bash/examples/functions/ksh-cd
# Early by this link I've seen the bash function by Chester Ramey
# implementing a such functionality. At the present, that link is
# unavailable. Also it's old implementation and it doesn't support
# additional options introduced in the latest bash 4.4.x releases. And
# as a result, I reinvented it on my own.
#
# http://www.commandlinefu.com/commands/view/13604/change-directory-for-current-path-in-bash
# Lightweight version with the almost same functionality
cd() {
	local CDOPTS
	local opt

	OPTIND=1

	while getopts "LPe@" opt
	do
		case "$opt" in
		L | P | e | @ )
			CDOPTS="$CDOPTS -$opt"
			;;
		esac
	done

	shift $(( OPTIND - 1 ))

	case $# in
	0 | 1 )
		builtin cd $CDOPTS "$@"
		;;
	2 )
		case "$PWD" in
		*$1* )
			# correct: do nothing
			;;
		* )
			echo "${0##*/}: cd: bad substitution" >&2
			return 2
			;;
		esac

		builtin cd $CDOPTS "${PWD//$1/$2}"
		;;
	* )
		echo "${0##*/}: cd: too many arguments" >&2
		return 2
		;;
	esac
}

# =========================================================================

# EOF
